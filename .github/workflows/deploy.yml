# 🚀 自動デプロイワークフロー
# mainブランチへのpushで自動的にビルド・デプロイを実行

name: Deploy to Xserver

# トリガー条件
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 環境変数
env:
  NODE_VERSION: '20'
  
# ジョブ定義
jobs:
  # ビルドジョブ
  build:
    runs-on: ubuntu-latest
    
    steps:
    # リポジトリのチェックアウト
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    # Node.jsのセットアップ
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    # 依存関係のインストール
    - name: 📦 Install dependencies
      run: |
        cd frontend
        npm ci
        
    # 環境変数の設定
    - name: 🔐 Create environment file
      run: |
        cd frontend
        echo "NEXT_PUBLIC_SANITY_PROJECT_ID=${{ secrets.SANITY_PROJECT_ID }}" > .env.local
        echo "NEXT_PUBLIC_SANITY_DATASET=${{ secrets.SANITY_DATASET }}" >> .env.local
        echo "NEXT_PUBLIC_SANITY_API_VERSION=${{ secrets.SANITY_API_VERSION }}" >> .env.local
        echo "SANITY_API_READ_TOKEN=${{ secrets.SANITY_API_READ_TOKEN }}" >> .env.local
        echo "SANITY_PREVIEW_SECRET=${{ secrets.SANITY_PREVIEW_SECRET }}" >> .env.local
        
    # Next.jsアプリケーションのビルド
    - name: 🏗️ Build Next.js application
      run: |
        cd frontend
        NEXT_TELEMETRY_DISABLED=1 npm run build
        
    # ビルド成果物のアップロード
    - name: 📁 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: frontend/out/
        retention-days: 1

  # デプロイジョブ（mainブランチのみ）
  # 一時的に無効化 - Xserver設定後に有効化
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: false  # 一時的に無効化
    
    steps:
    # ビルド成果物のダウンロード
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./build
        
    # FTPでXserverにデプロイ
    - name: 🚀 Deploy to Xserver via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./build/
        server-dir: ${{ secrets.FTP_SERVER_DIR }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/.env*
          
    # デプロイ成功通知
    - name: 📧 Notify deployment success
      if: success()
      run: |
        echo "🎉 デプロイが成功しました！"
        echo "サイトURL: https://yourdomain.com"
        
    # デプロイ失敗通知
    - name: ❌ Notify deployment failure
      if: failure()
      run: |
        echo "❌ デプロイに失敗しました"
        echo "ログを確認してください"

  # セキュリティチェックジョブ
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    # 脆弱性チェック
    - name: 🔍 Security audit
      run: |
        cd frontend
        npm audit --audit-level moderate
        
    # 依存関係ライセンスチェック
    - name: 📄 License check
      run: |
        cd frontend
        npx license-checker --summary