# 📰 Sanity投稿更新時の自動デプロイワークフロー
# Sanity WebhookまたはRepository Dispatchで実行

name: Update News from Sanity

# トリガー条件
on:
  repository_dispatch:
    types: [sanity-update]
  workflow_dispatch: # 手動実行も可能
    inputs:
      reason:
        description: 'Update reason'
        required: false
        default: 'Manual news update'

# 環境変数
env:
  NODE_VERSION: '20'

# ジョブ定義
jobs:
  update-news:
    runs-on: ubuntu-latest
    
    steps:
    # リポジトリのチェックアウト
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    # Node.jsのセットアップ
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    # Sanityからデータを取得してJSONを生成
    - name: 📡 Fetch data from Sanity and update JSON
      run: |
        echo "🔍 Sanityからニュースデータを取得中..."
        
        # Sanity APIからデータを取得
        SANITY_URL="https://rt90f87e.api.sanity.io/v2024-01-01/data/query/production"
        QUERY='*[_type == "post"] | order(publishedAt desc)[0...4] {title, publishedAt, slug, excerpt}'
        ENCODED_QUERY=$(node -e "console.log(encodeURIComponent('$QUERY'))")
        
        echo "📡 Sanity APIにアクセス中..."
        echo "URL: ${SANITY_URL}?query=${ENCODED_QUERY}"
        
        # curlでデータ取得（JSONPではなく直接取得を試行）
        RESPONSE=$(curl -s "${SANITY_URL}?query=${ENCODED_QUERY}")
        echo "📊 Sanity応答: $RESPONSE"
        
        # データが取得できた場合は処理、失敗した場合はフォールバック
        if echo "$RESPONSE" | grep -q '"result"'; then
          echo "✅ Sanityからデータ取得成功"
          echo "$RESPONSE" | node -e "
            const data = JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8'));
            const posts = data.result || [];
            console.log('取得した投稿数:', posts.length);
            require('fs').writeFileSync('site_5/news-data.json', JSON.stringify(posts, null, 2));
            console.log('✅ news-data.json を更新しました');
          "
        else
          echo "⚠️ Sanityからのデータ取得に失敗、既存データを保持します"
          echo "$RESPONSE"
        fi
        
    # 変更があればコミット
    - name: 📝 Commit updated news data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --exit-code site_5/news-data.json; then
          echo "📄 ニュースデータに変更はありませんでした"
        else
          echo "📝 ニュースデータが更新されました、コミット中..."
          git add site_5/news-data.json
          git commit -m "$(cat <<'EOF'
        auto: Update news data from Sanity CMS

        Automatically generated from Sanity Studio post updates.
        
        🤖 Generated with [Claude Code](https://claude.ai/code)
        
        Co-Authored-By: Claude <noreply@anthropic.com>
        EOF
        )"
          git push
          echo "✅ 変更をプッシュしました"
        fi
        
    # サイト更新の通知
    - name: 📧 Notify update completion
      run: |
        echo "🎉 ニュース更新プロセスが完了しました！"
        echo "📅 更新時刻: $(date)"
        echo "🌐 サイトURL: https://kanauuu.okigaruweb.com"
        echo "📝 理由: ${{ github.event.inputs.reason || 'Sanity webhook trigger' }}"