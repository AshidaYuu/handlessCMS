# 🚀 HandlessCMS - Xserver最適化設定
# パフォーマンス・セキュリティ・SEO最適化

# =====================================
# 🔒 セキュリティ設定
# =====================================

# X-Frame-Options: クリックジャッキング防止
<IfModule mod_headers.c>
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"
</IfModule>

# サーバー情報の非表示
ServerTokens Prod
<IfModule mod_headers.c>
    Header unset Server
    Header unset X-Powered-By
</IfModule>

# 機密ファイルへのアクセス拒否
<FilesMatch "(^#.*#|\.(bak|conf|dist|fla|inc|ini|log|orig|psd|sh|sql|sw[op])|~)$">
    Require all denied
</FilesMatch>

# Next.jsビルドファイルの保護
<Files ~ "\.json$">
    <RequireAll>
        Require all denied
        Require uri "sitemap.xml"
        Require uri "manifest.json"
    </RequireAll>
</Files>

# =====================================
# ⚡ パフォーマンス最適化
# =====================================

# Gzip圧縮の有効化
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/atom_xml
    AddOutputFilterByType DEFLATE image/svg+xml
</IfModule>

# ブラウザキャッシュの設定
<IfModule mod_expires.c>
    ExpiresActive On
    
    # HTML（短期キャッシュ）
    ExpiresByType text/html "access plus 1 hour"
    
    # CSS・JavaScript（中期キャッシュ）
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    
    # 画像（長期キャッシュ）
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    
    # フォント
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # その他
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType text/xml "access plus 1 hour"
    ExpiresByType application/xml "access plus 1 hour"
</IfModule>

# ETagの無効化（Last-Modifiedを優先）
<IfModule mod_headers.c>
    Header unset ETag
</IfModule>
FileETag None

# =====================================
# 🔄 URL最適化・SEO設定
# =====================================

# HTTPSへの強制リダイレクト
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # HTTPS強制
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
    
    # www の統一（www有り/なしを選択）
    # www無しに統一する場合
    RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
    RewriteRule ^(.*)$ https://%1%{REQUEST_URI} [R=301,L]
    
    # Next.jsの静的ファイルルーティング
    # トレイリングスラッシュの処理
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} !/$
    RewriteRule ^(.*)$ /$1/ [R=301,L]
    
    # index.htmlの非表示
    RewriteCond %{THE_REQUEST} \s/+(.*/)?index\.html[\s?] [NC]
    RewriteRule ^(.*/)?index\.html$ /%1 [R=301,L]
    
    # .htmlの非表示
    RewriteCond %{THE_REQUEST} \s/+(.*/)?([^/\s?]+)\.html[\s?] [NC]
    RewriteRule ^(.*/)?([^/]+)\.html$ /%1%2/ [R=301,L]
</IfModule>

# =====================================
# 📱 プリロード・最適化
# =====================================

# 重要リソースのプリロード
<IfModule mod_headers.c>
    # フォントのプリロード
    <FilesMatch "\.(woff|woff2)$">
        Header set Link "</fonts/font.woff2>; rel=preload; as=font; type=font/woff2; crossorigin"
    </FilesMatch>
    
    # CSSのプリロード
    <Files "*.css">
        Header set Link "</_next/static/css/main.css>; rel=preload; as=style"
    </FilesMatch>
</IfModule>

# =====================================
# 🛠️ エラーページ設定
# =====================================

# カスタムエラーページ
ErrorDocument 404 /404/index.html
ErrorDocument 500 /500/index.html

# エラーログの設定
<IfModule mod_log_config.c>
    LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
    CustomLog "|/usr/bin/rotatelogs /home/logs/access.log.%Y%m%d 86400" combined
    ErrorLog "|/usr/bin/rotatelogs /home/logs/error.log.%Y%m%d 86400"
</IfModule>

# =====================================
# 🎯 Next.js特有の設定
# =====================================

# _next ディレクトリの最適化
<IfModule mod_rewrite.c>
    # Next.jsの静的ファイルに長期キャッシュを適用
    RewriteRule ^_next/static/ - [E=CACHE_CONTROL_MAX_AGE:31536000]
</IfModule>

<IfModule mod_headers.c>
    # Next.js静的ファイルのキャッシュ制御
    <If "%{REQUEST_URI} =~ m#^/_next/static/#">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </If>
    
    # APIルートのキャッシュ制御
    <If "%{REQUEST_URI} =~ m#^/api/#">
        Header set Cache-Control "no-cache, no-store, must-revalidate"
    </If>
</IfModule>

# =====================================
# 📊 Analytics・monitoring
# =====================================

# アクセスログの軽量化
<IfModule mod_setenvif.c>
    # ボット・クローラーのログ除外
    SetEnvIf User-Agent "Googlebot" dontlog
    SetEnvIf User-Agent "bingbot" dontlog
    SetEnvIf User-Agent "slurp" dontlog
    SetEnvIf Remote_Addr "127\.0\.0\.1" dontlog
    
    # 静的ファイルのログ除外
    SetEnvIfNoCase Request_URI "\.(ico|gif|jpg|png|css|js|woff|woff2)$" dontlog
</IfModule>

# =====================================
# 🔧 その他の最適化
# =====================================

# ディレクトリリスティングの無効化
Options -Indexes

# シンボリックリンクの無効化
Options -FollowSymLinks

# MultiViewsの無効化
Options -MultiViews

# charset指定
AddDefaultCharset UTF-8

# MIMEタイプの追加
<IfModule mod_mime.c>
    AddType application/javascript .js
    AddType text/css .css
    AddType image/svg+xml .svg
    AddType application/font-woff .woff
    AddType application/font-woff2 .woff2
    AddType image/webp .webp
</IfModule>